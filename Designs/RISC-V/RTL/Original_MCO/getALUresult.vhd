-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity getALUresult is
port (
    ap_ready : OUT STD_LOGIC;
    aluFunction : IN STD_LOGIC_VECTOR (3 downto 0);
    operand1_V : IN STD_LOGIC_VECTOR (31 downto 0);
    operand2_V : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of getALUresult is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal tmp_s_fu_249_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_agg_result_V_phi_fu_55_p22 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_79_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_80_fu_242_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_79_fu_85_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_fu_235_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_81_fu_91_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_1_fu_228_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_fu_97_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_2_fu_221_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_83_fu_103_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal val_assign_fu_192_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_84_fu_109_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_86_fu_115_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_88_fu_121_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_3_fu_177_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_89_fu_127_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal val_assign_1_fu_162_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_90_fu_133_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_2_fu_216_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_3_fu_205_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal operand1_V_s_fu_145_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_91_fu_139_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_154_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_Result_2_fu_158_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_169_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_Result_3_fu_173_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_184_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_Result_s_fu_188_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_87_fu_199_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_85_fu_210_p2 : STD_LOGIC_VECTOR (0 downto 0);


begin




    ap_phi_mux_agg_result_V_phi_fu_55_p22_assign_proc : process(tmp_s_fu_249_p2, tmp_fu_79_p2, tmp_80_fu_242_p2, tmp_79_fu_85_p2, r_V_fu_235_p2, tmp_81_fu_91_p2, r_V_1_fu_228_p2, tmp_82_fu_97_p2, r_V_2_fu_221_p2, tmp_83_fu_103_p2, val_assign_fu_192_p2, tmp_84_fu_109_p2, tmp_86_fu_115_p2, tmp_88_fu_121_p2, r_V_3_fu_177_p2, tmp_89_fu_127_p2, val_assign_1_fu_162_p2, tmp_90_fu_133_p2, p_2_fu_216_p1, p_3_fu_205_p1, operand1_V_s_fu_145_p3)
    begin
        if (((tmp_90_fu_133_p2 = ap_const_lv1_0) and (tmp_89_fu_127_p2 = ap_const_lv1_0) and (tmp_88_fu_121_p2 = ap_const_lv1_0) and (tmp_86_fu_115_p2 = ap_const_lv1_0) and (tmp_84_fu_109_p2 = ap_const_lv1_0) and (tmp_83_fu_103_p2 = ap_const_lv1_0) and (tmp_82_fu_97_p2 = ap_const_lv1_0) and (tmp_81_fu_91_p2 = ap_const_lv1_0) and (tmp_79_fu_85_p2 = ap_const_lv1_0) and (tmp_fu_79_p2 = ap_const_lv1_0))) then 
            ap_phi_mux_agg_result_V_phi_fu_55_p22 <= operand1_V_s_fu_145_p3;
        elsif (((tmp_84_fu_109_p2 = ap_const_lv1_0) and (tmp_83_fu_103_p2 = ap_const_lv1_0) and (tmp_82_fu_97_p2 = ap_const_lv1_0) and (tmp_81_fu_91_p2 = ap_const_lv1_0) and (tmp_79_fu_85_p2 = ap_const_lv1_0) and (tmp_86_fu_115_p2 = ap_const_lv1_1) and (tmp_fu_79_p2 = ap_const_lv1_0))) then 
            ap_phi_mux_agg_result_V_phi_fu_55_p22 <= p_3_fu_205_p1;
        elsif (((tmp_83_fu_103_p2 = ap_const_lv1_0) and (tmp_82_fu_97_p2 = ap_const_lv1_0) and (tmp_81_fu_91_p2 = ap_const_lv1_0) and (tmp_79_fu_85_p2 = ap_const_lv1_0) and (tmp_84_fu_109_p2 = ap_const_lv1_1) and (tmp_fu_79_p2 = ap_const_lv1_0))) then 
            ap_phi_mux_agg_result_V_phi_fu_55_p22 <= p_2_fu_216_p1;
        elsif (((tmp_89_fu_127_p2 = ap_const_lv1_0) and (tmp_88_fu_121_p2 = ap_const_lv1_0) and (tmp_86_fu_115_p2 = ap_const_lv1_0) and (tmp_84_fu_109_p2 = ap_const_lv1_0) and (tmp_83_fu_103_p2 = ap_const_lv1_0) and (tmp_82_fu_97_p2 = ap_const_lv1_0) and (tmp_81_fu_91_p2 = ap_const_lv1_0) and (tmp_79_fu_85_p2 = ap_const_lv1_0) and (tmp_90_fu_133_p2 = ap_const_lv1_1) and (tmp_fu_79_p2 = ap_const_lv1_0))) then 
            ap_phi_mux_agg_result_V_phi_fu_55_p22 <= val_assign_1_fu_162_p2;
        elsif (((tmp_88_fu_121_p2 = ap_const_lv1_0) and (tmp_86_fu_115_p2 = ap_const_lv1_0) and (tmp_84_fu_109_p2 = ap_const_lv1_0) and (tmp_83_fu_103_p2 = ap_const_lv1_0) and (tmp_82_fu_97_p2 = ap_const_lv1_0) and (tmp_81_fu_91_p2 = ap_const_lv1_0) and (tmp_79_fu_85_p2 = ap_const_lv1_0) and (tmp_89_fu_127_p2 = ap_const_lv1_1) and (tmp_fu_79_p2 = ap_const_lv1_0))) then 
            ap_phi_mux_agg_result_V_phi_fu_55_p22 <= r_V_3_fu_177_p2;
        elsif (((tmp_86_fu_115_p2 = ap_const_lv1_0) and (tmp_84_fu_109_p2 = ap_const_lv1_0) and (tmp_83_fu_103_p2 = ap_const_lv1_0) and (tmp_82_fu_97_p2 = ap_const_lv1_0) and (tmp_81_fu_91_p2 = ap_const_lv1_0) and (tmp_79_fu_85_p2 = ap_const_lv1_0) and (tmp_88_fu_121_p2 = ap_const_lv1_1) and (tmp_fu_79_p2 = ap_const_lv1_0))) then 
            ap_phi_mux_agg_result_V_phi_fu_55_p22 <= val_assign_fu_192_p2;
        elsif (((tmp_82_fu_97_p2 = ap_const_lv1_0) and (tmp_81_fu_91_p2 = ap_const_lv1_0) and (tmp_79_fu_85_p2 = ap_const_lv1_0) and (tmp_83_fu_103_p2 = ap_const_lv1_1) and (tmp_fu_79_p2 = ap_const_lv1_0))) then 
            ap_phi_mux_agg_result_V_phi_fu_55_p22 <= r_V_2_fu_221_p2;
        elsif (((tmp_81_fu_91_p2 = ap_const_lv1_0) and (tmp_79_fu_85_p2 = ap_const_lv1_0) and (tmp_82_fu_97_p2 = ap_const_lv1_1) and (tmp_fu_79_p2 = ap_const_lv1_0))) then 
            ap_phi_mux_agg_result_V_phi_fu_55_p22 <= r_V_1_fu_228_p2;
        elsif (((tmp_79_fu_85_p2 = ap_const_lv1_0) and (tmp_81_fu_91_p2 = ap_const_lv1_1) and (tmp_fu_79_p2 = ap_const_lv1_0))) then 
            ap_phi_mux_agg_result_V_phi_fu_55_p22 <= r_V_fu_235_p2;
        elsif (((tmp_79_fu_85_p2 = ap_const_lv1_1) and (tmp_fu_79_p2 = ap_const_lv1_0))) then 
            ap_phi_mux_agg_result_V_phi_fu_55_p22 <= tmp_80_fu_242_p2;
        elsif ((tmp_fu_79_p2 = ap_const_lv1_1)) then 
            ap_phi_mux_agg_result_V_phi_fu_55_p22 <= tmp_s_fu_249_p2;
        else 
            ap_phi_mux_agg_result_V_phi_fu_55_p22 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    ap_ready <= ap_const_logic_1;
    ap_return <= ap_phi_mux_agg_result_V_phi_fu_55_p22;
    operand1_V_s_fu_145_p3 <= 
        operand1_V when (tmp_91_fu_139_p2(0) = '1') else 
        ap_const_lv32_0;
    p_2_fu_216_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_85_fu_210_p2),32));
    p_3_fu_205_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_87_fu_199_p2),32));
    p_Result_2_fu_158_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_11_fu_154_p1),32));
    p_Result_3_fu_173_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_10_fu_169_p1),32));
    p_Result_s_fu_188_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_fu_184_p1),32));
    r_V_1_fu_228_p2 <= (operand2_V or operand1_V);
    r_V_2_fu_221_p2 <= (operand2_V xor operand1_V);
    r_V_3_fu_177_p2 <= std_logic_vector(shift_right(signed(operand1_V),to_integer(unsigned('0' & p_Result_3_fu_173_p1(31-1 downto 0)))));
    r_V_fu_235_p2 <= (operand2_V and operand1_V);
    tmp_10_fu_169_p1 <= operand2_V(5 - 1 downto 0);
    tmp_11_fu_154_p1 <= operand2_V(5 - 1 downto 0);
    tmp_79_fu_85_p2 <= "1" when (aluFunction = ap_const_lv4_9) else "0";
    tmp_80_fu_242_p2 <= std_logic_vector(unsigned(operand1_V) - unsigned(operand2_V));
    tmp_81_fu_91_p2 <= "1" when (aluFunction = ap_const_lv4_1) else "0";
    tmp_82_fu_97_p2 <= "1" when (aluFunction = ap_const_lv4_3) else "0";
    tmp_83_fu_103_p2 <= "1" when (aluFunction = ap_const_lv4_B) else "0";
    tmp_84_fu_109_p2 <= "1" when (aluFunction = ap_const_lv4_5) else "0";
    tmp_85_fu_210_p2 <= "1" when (signed(operand1_V) < signed(operand2_V)) else "0";
    tmp_86_fu_115_p2 <= "1" when (aluFunction = ap_const_lv4_6) else "0";
    tmp_87_fu_199_p2 <= "1" when (unsigned(operand1_V) < unsigned(operand2_V)) else "0";
    tmp_88_fu_121_p2 <= "1" when (aluFunction = ap_const_lv4_4) else "0";
    tmp_89_fu_127_p2 <= "1" when (aluFunction = ap_const_lv4_7) else "0";
    tmp_90_fu_133_p2 <= "1" when (aluFunction = ap_const_lv4_8) else "0";
    tmp_91_fu_139_p2 <= "1" when (aluFunction = ap_const_lv4_2) else "0";
    tmp_9_fu_184_p1 <= operand2_V(5 - 1 downto 0);
    tmp_fu_79_p2 <= "1" when (aluFunction = ap_const_lv4_0) else "0";
    tmp_s_fu_249_p2 <= std_logic_vector(unsigned(operand2_V) + unsigned(operand1_V));
    val_assign_1_fu_162_p2 <= std_logic_vector(shift_right(unsigned(operand1_V),to_integer(unsigned('0' & p_Result_2_fu_158_p1(31-1 downto 0)))));
    val_assign_fu_192_p2 <= std_logic_vector(shift_left(unsigned(operand1_V),to_integer(unsigned('0' & p_Result_s_fu_188_p1(31-1 downto 0)))));
end behav;
