-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity getEncUALUresult is
port (
    ap_ready : OUT STD_LOGIC;
    encodedInstr_V : IN STD_LOGIC_VECTOR (31 downto 0);
    pcReg_V : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of getEncUALUresult is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv6_11 : STD_LOGIC_VECTOR (5 downto 0) := "010001";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal grp_getALUresult_fu_41_ap_ready : STD_LOGIC;
    signal grp_getALUresult_fu_41_aluFunction : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_getALUresult_fu_41_operand1_V : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_getALUresult_fu_41_operand2_V : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_getALUresult_fu_41_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_getInstrType_fu_54_ap_ready : STD_LOGIC;
    signal tmp_getInstrType_fu_54_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal p_s_getImmediate_fu_60_ap_ready : STD_LOGIC;
    signal p_s_getImmediate_fu_60_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln124_fu_68_p2 : STD_LOGIC_VECTOR (0 downto 0);

    component getALUresult IS
    port (
        ap_ready : OUT STD_LOGIC;
        aluFunction : IN STD_LOGIC_VECTOR (3 downto 0);
        operand1_V : IN STD_LOGIC_VECTOR (31 downto 0);
        operand2_V : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component getInstrType IS
    port (
        ap_ready : OUT STD_LOGIC;
        encodedInstr_V : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component getImmediate IS
    port (
        ap_ready : OUT STD_LOGIC;
        encodedInstr_V : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_getALUresult_fu_41 : component getALUresult
    port map (
        ap_ready => grp_getALUresult_fu_41_ap_ready,
        aluFunction => grp_getALUresult_fu_41_aluFunction,
        operand1_V => grp_getALUresult_fu_41_operand1_V,
        operand2_V => grp_getALUresult_fu_41_operand2_V,
        ap_return => grp_getALUresult_fu_41_ap_return);

    tmp_getInstrType_fu_54 : component getInstrType
    port map (
        ap_ready => tmp_getInstrType_fu_54_ap_ready,
        encodedInstr_V => encodedInstr_V,
        ap_return => tmp_getInstrType_fu_54_ap_return);

    p_s_getImmediate_fu_60 : component getImmediate
    port map (
        ap_ready => p_s_getImmediate_fu_60_ap_ready,
        encodedInstr_V => encodedInstr_V,
        ap_return => p_s_getImmediate_fu_60_ap_return);




    ap_ready <= ap_const_logic_1;
    ap_return <= grp_getALUresult_fu_41_ap_return;

    grp_getALUresult_fu_41_aluFunction_assign_proc : process(icmp_ln124_fu_68_p2)
    begin
        if ((icmp_ln124_fu_68_p2 = ap_const_lv1_1)) then 
            grp_getALUresult_fu_41_aluFunction <= ap_const_lv4_2;
        elsif ((icmp_ln124_fu_68_p2 = ap_const_lv1_0)) then 
            grp_getALUresult_fu_41_aluFunction <= ap_const_lv4_0;
        else 
            grp_getALUresult_fu_41_aluFunction <= "XXXX";
        end if; 
    end process;


    grp_getALUresult_fu_41_operand1_V_assign_proc : process(pcReg_V, p_s_getImmediate_fu_60_ap_return, icmp_ln124_fu_68_p2)
    begin
        if ((icmp_ln124_fu_68_p2 = ap_const_lv1_1)) then 
            grp_getALUresult_fu_41_operand1_V <= p_s_getImmediate_fu_60_ap_return;
        elsif ((icmp_ln124_fu_68_p2 = ap_const_lv1_0)) then 
            grp_getALUresult_fu_41_operand1_V <= pcReg_V;
        else 
            grp_getALUresult_fu_41_operand1_V <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_getALUresult_fu_41_operand2_V_assign_proc : process(p_s_getImmediate_fu_60_ap_return, icmp_ln124_fu_68_p2)
    begin
        if ((icmp_ln124_fu_68_p2 = ap_const_lv1_1)) then 
            grp_getALUresult_fu_41_operand2_V <= ap_const_lv32_0;
        elsif ((icmp_ln124_fu_68_p2 = ap_const_lv1_0)) then 
            grp_getALUresult_fu_41_operand2_V <= p_s_getImmediate_fu_60_ap_return;
        else 
            grp_getALUresult_fu_41_operand2_V <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln124_fu_68_p2 <= "1" when (tmp_getInstrType_fu_54_ap_return = ap_const_lv6_11) else "0";
end behav;
