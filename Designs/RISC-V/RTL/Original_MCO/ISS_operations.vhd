-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity ISS_operations is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    fromMemoryPort_sig_loadedData_V : IN STD_LOGIC_VECTOR (31 downto 0);
    fromRegsPort_sig_reg_file_01_V : IN STD_LOGIC_VECTOR (31 downto 0);
    fromRegsPort_sig_reg_file_02_V : IN STD_LOGIC_VECTOR (31 downto 0);
    fromRegsPort_sig_reg_file_03_V : IN STD_LOGIC_VECTOR (31 downto 0);
    fromRegsPort_sig_reg_file_04_V : IN STD_LOGIC_VECTOR (31 downto 0);
    fromRegsPort_sig_reg_file_05_V : IN STD_LOGIC_VECTOR (31 downto 0);
    fromRegsPort_sig_reg_file_06_V : IN STD_LOGIC_VECTOR (31 downto 0);
    fromRegsPort_sig_reg_file_07_V : IN STD_LOGIC_VECTOR (31 downto 0);
    fromRegsPort_sig_reg_file_08_V : IN STD_LOGIC_VECTOR (31 downto 0);
    fromRegsPort_sig_reg_file_09_V : IN STD_LOGIC_VECTOR (31 downto 0);
    fromRegsPort_sig_reg_file_10_V : IN STD_LOGIC_VECTOR (31 downto 0);
    fromRegsPort_sig_reg_file_11_V : IN STD_LOGIC_VECTOR (31 downto 0);
    fromRegsPort_sig_reg_file_12_V : IN STD_LOGIC_VECTOR (31 downto 0);
    fromRegsPort_sig_reg_file_13_V : IN STD_LOGIC_VECTOR (31 downto 0);
    fromRegsPort_sig_reg_file_14_V : IN STD_LOGIC_VECTOR (31 downto 0);
    fromRegsPort_sig_reg_file_15_V : IN STD_LOGIC_VECTOR (31 downto 0);
    fromRegsPort_sig_reg_file_16_V : IN STD_LOGIC_VECTOR (31 downto 0);
    fromRegsPort_sig_reg_file_17_V : IN STD_LOGIC_VECTOR (31 downto 0);
    fromRegsPort_sig_reg_file_18_V : IN STD_LOGIC_VECTOR (31 downto 0);
    fromRegsPort_sig_reg_file_19_V : IN STD_LOGIC_VECTOR (31 downto 0);
    fromRegsPort_sig_reg_file_20_V : IN STD_LOGIC_VECTOR (31 downto 0);
    fromRegsPort_sig_reg_file_21_V : IN STD_LOGIC_VECTOR (31 downto 0);
    fromRegsPort_sig_reg_file_22_V : IN STD_LOGIC_VECTOR (31 downto 0);
    fromRegsPort_sig_reg_file_23_V : IN STD_LOGIC_VECTOR (31 downto 0);
    fromRegsPort_sig_reg_file_24_V : IN STD_LOGIC_VECTOR (31 downto 0);
    fromRegsPort_sig_reg_file_25_V : IN STD_LOGIC_VECTOR (31 downto 0);
    fromRegsPort_sig_reg_file_26_V : IN STD_LOGIC_VECTOR (31 downto 0);
    fromRegsPort_sig_reg_file_27_V : IN STD_LOGIC_VECTOR (31 downto 0);
    fromRegsPort_sig_reg_file_28_V : IN STD_LOGIC_VECTOR (31 downto 0);
    fromRegsPort_sig_reg_file_29_V : IN STD_LOGIC_VECTOR (31 downto 0);
    fromRegsPort_sig_reg_file_30_V : IN STD_LOGIC_VECTOR (31 downto 0);
    fromRegsPort_sig_reg_file_31_V : IN STD_LOGIC_VECTOR (31 downto 0);
    toMemoryPort_sig_addrIn_V : OUT STD_LOGIC_VECTOR (31 downto 0);
    toMemoryPort_sig_addrIn_V_ap_vld : OUT STD_LOGIC;
    toMemoryPort_sig_dataIn_V : OUT STD_LOGIC_VECTOR (31 downto 0);
    toMemoryPort_sig_dataIn_V_ap_vld : OUT STD_LOGIC;
    toMemoryPort_sig_mask : OUT STD_LOGIC_VECTOR (2 downto 0);
    toMemoryPort_sig_mask_ap_vld : OUT STD_LOGIC;
    toMemoryPort_sig_req : OUT STD_LOGIC_VECTOR (1 downto 0);
    toMemoryPort_sig_req_ap_vld : OUT STD_LOGIC;
    in_pcReg_V : IN STD_LOGIC_VECTOR (31 downto 0);
    in_regfileWrite_dst_V : IN STD_LOGIC_VECTOR (31 downto 0);
    out_pcReg_V : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_pcReg_V_ap_vld : OUT STD_LOGIC;
    out_regfileWrite_dst_V : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_regfileWrite_dst_V_ap_vld : OUT STD_LOGIC;
    out_regfileWrite_dstData_V : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_regfileWrite_dstData_V_ap_vld : OUT STD_LOGIC;
    fromMemoryPort_notify : OUT STD_LOGIC;
    fromMemoryPort_notify_ap_vld : OUT STD_LOGIC;
    toMemoryPort_notify : OUT STD_LOGIC;
    toMemoryPort_notify_ap_vld : OUT STD_LOGIC;
    toRegsPort_notify : OUT STD_LOGIC;
    toRegsPort_notify_ap_vld : OUT STD_LOGIC;
    active_operation : IN STD_LOGIC_VECTOR (3 downto 0) );
end;


architecture behav of ISS_operations is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "ISS_operations,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcvu9p-flga2104-2-i,HLS_INPUT_CLOCK=20.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.118175,HLS_SYN_LAT=3,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=161,HLS_SYN_LUT=6266,HLS_VERSION=2018_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal active_operation_rea_read_fu_206_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_getRs1Addr_fu_582_ap_return : STD_LOGIC_VECTOR (4 downto 0);
    signal reg_516 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    signal grp_getRs2Addr_fu_814_ap_return : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_readRegfile_fu_650_ap_idle : STD_LOGIC;
    signal grp_readRegfile_fu_650_ap_ready : STD_LOGIC;
    signal grp_readRegfile_fu_650_ap_done : STD_LOGIC;
    signal grp_getALUfunc_fu_562_ap_idle : STD_LOGIC;
    signal grp_getALUfunc_fu_562_ap_ready : STD_LOGIC;
    signal grp_getALUfunc_fu_562_ap_done : STD_LOGIC;
    signal ap_block_state3_on_subcall_done : BOOLEAN;
    signal grp_getInstrType_fu_528_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal reg_519 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal grp_getALUfunc_fu_562_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal reg_1082 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal grp_readRegfile_fu_650_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1087 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal grp_getRdAddr_fu_499_ap_ready : STD_LOGIC;
    signal grp_getRdAddr_fu_499_ap_return : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_getInstrType_fu_528_ap_ready : STD_LOGIC;
    signal grp_getALUfunc_fu_562_ap_start : STD_LOGIC;
    signal grp_getRs1Addr_fu_582_ap_ready : STD_LOGIC;
    signal grp_readRegfile_fu_650_ap_start : STD_LOGIC;
    signal grp_getRs2Addr_fu_814_ap_ready : STD_LOGIC;
    signal grp_getALUresult_fu_943_ap_ready : STD_LOGIC;
    signal grp_getALUresult_fu_943_aluFunction : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_getALUresult_fu_943_operand1_V : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_getALUresult_fu_943_operand2_V : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_getALUresult_fu_943_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_getImmediate_fu_983_ap_ready : STD_LOGIC;
    signal grp_getImmediate_fu_983_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal op2_V_assign_2_branchPCcalculation_fu_1011_ap_ready : STD_LOGIC;
    signal op2_V_assign_2_branchPCcalculation_fu_1011_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_getMemoryMask_fu_1033_ap_ready : STD_LOGIC;
    signal grp_getMemoryMask_fu_1033_ap_return : STD_LOGIC_VECTOR (2 downto 0);
    signal op2_V_assign_7_getEncUALUresult_fu_1052_ap_ready : STD_LOGIC;
    signal op2_V_assign_7_getEncUALUresult_fu_1052_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_getALUfunc_fu_562_ap_start_reg : STD_LOGIC := '0';
    signal grp_readRegfile_fu_650_ap_start_reg : STD_LOGIC := '0';
    signal grp_fu_1110_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1073_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state2_on_subcall_done : BOOLEAN;
    signal ap_block_state4_on_subcall_done : BOOLEAN;
    signal p_trunc2_ext_fu_1100_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_trunc1_ext_fu_1105_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_trunc5_ext_fu_1118_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_trunc4_ext_fu_1123_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_trunc3_ext_fu_1128_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_trunc_ext_fu_1133_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1073_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1073_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);

    component getRdAddr IS
    port (
        ap_ready : OUT STD_LOGIC;
        encodedInstr_V : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (4 downto 0) );
    end component;


    component getInstrType IS
    port (
        ap_ready : OUT STD_LOGIC;
        encodedInstr_V : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component getALUfunc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        instr : IN STD_LOGIC_VECTOR (5 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component getRs1Addr IS
    port (
        ap_ready : OUT STD_LOGIC;
        encodedInstr_V : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (4 downto 0) );
    end component;


    component readRegfile IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        regfile_reg_file_01_V : IN STD_LOGIC_VECTOR (31 downto 0);
        regfile_reg_file_02_V : IN STD_LOGIC_VECTOR (31 downto 0);
        regfile_reg_file_03_V : IN STD_LOGIC_VECTOR (31 downto 0);
        regfile_reg_file_04_V : IN STD_LOGIC_VECTOR (31 downto 0);
        regfile_reg_file_05_V : IN STD_LOGIC_VECTOR (31 downto 0);
        regfile_reg_file_06_V : IN STD_LOGIC_VECTOR (31 downto 0);
        regfile_reg_file_07_V : IN STD_LOGIC_VECTOR (31 downto 0);
        regfile_reg_file_08_V : IN STD_LOGIC_VECTOR (31 downto 0);
        regfile_reg_file_09_V : IN STD_LOGIC_VECTOR (31 downto 0);
        regfile_reg_file_10_V : IN STD_LOGIC_VECTOR (31 downto 0);
        regfile_reg_file_11_V : IN STD_LOGIC_VECTOR (31 downto 0);
        regfile_reg_file_12_V : IN STD_LOGIC_VECTOR (31 downto 0);
        regfile_reg_file_13_V : IN STD_LOGIC_VECTOR (31 downto 0);
        regfile_reg_file_14_V : IN STD_LOGIC_VECTOR (31 downto 0);
        regfile_reg_file_15_V : IN STD_LOGIC_VECTOR (31 downto 0);
        regfile_reg_file_16_V : IN STD_LOGIC_VECTOR (31 downto 0);
        regfile_reg_file_17_V : IN STD_LOGIC_VECTOR (31 downto 0);
        regfile_reg_file_18_V : IN STD_LOGIC_VECTOR (31 downto 0);
        regfile_reg_file_19_V : IN STD_LOGIC_VECTOR (31 downto 0);
        regfile_reg_file_20_V : IN STD_LOGIC_VECTOR (31 downto 0);
        regfile_reg_file_21_V : IN STD_LOGIC_VECTOR (31 downto 0);
        regfile_reg_file_22_V : IN STD_LOGIC_VECTOR (31 downto 0);
        regfile_reg_file_23_V : IN STD_LOGIC_VECTOR (31 downto 0);
        regfile_reg_file_24_V : IN STD_LOGIC_VECTOR (31 downto 0);
        regfile_reg_file_25_V : IN STD_LOGIC_VECTOR (31 downto 0);
        regfile_reg_file_26_V : IN STD_LOGIC_VECTOR (31 downto 0);
        regfile_reg_file_27_V : IN STD_LOGIC_VECTOR (31 downto 0);
        regfile_reg_file_28_V : IN STD_LOGIC_VECTOR (31 downto 0);
        regfile_reg_file_29_V : IN STD_LOGIC_VECTOR (31 downto 0);
        regfile_reg_file_30_V : IN STD_LOGIC_VECTOR (31 downto 0);
        regfile_reg_file_31_V : IN STD_LOGIC_VECTOR (31 downto 0);
        src_V : IN STD_LOGIC_VECTOR (4 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component getRs2Addr IS
    port (
        ap_ready : OUT STD_LOGIC;
        encodedInstr_V : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (4 downto 0) );
    end component;


    component getALUresult IS
    port (
        ap_ready : OUT STD_LOGIC;
        aluFunction : IN STD_LOGIC_VECTOR (3 downto 0);
        operand1_V : IN STD_LOGIC_VECTOR (31 downto 0);
        operand2_V : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component getImmediate IS
    port (
        ap_ready : OUT STD_LOGIC;
        encodedInstr_V : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component branchPCcalculation IS
    port (
        ap_ready : OUT STD_LOGIC;
        aluResult_V : IN STD_LOGIC_VECTOR (31 downto 0);
        encodedInstr_V : IN STD_LOGIC_VECTOR (31 downto 0);
        pcReg_V : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component getMemoryMask IS
    port (
        ap_ready : OUT STD_LOGIC;
        instr : IN STD_LOGIC_VECTOR (5 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component getEncUALUresult IS
    port (
        ap_ready : OUT STD_LOGIC;
        encodedInstr_V : IN STD_LOGIC_VECTOR (31 downto 0);
        pcReg_V : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_getRdAddr_fu_499 : component getRdAddr
    port map (
        ap_ready => grp_getRdAddr_fu_499_ap_ready,
        encodedInstr_V => fromMemoryPort_sig_loadedData_V,
        ap_return => grp_getRdAddr_fu_499_ap_return);

    grp_getInstrType_fu_528 : component getInstrType
    port map (
        ap_ready => grp_getInstrType_fu_528_ap_ready,
        encodedInstr_V => fromMemoryPort_sig_loadedData_V,
        ap_return => grp_getInstrType_fu_528_ap_return);

    grp_getALUfunc_fu_562 : component getALUfunc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_getALUfunc_fu_562_ap_start,
        ap_done => grp_getALUfunc_fu_562_ap_done,
        ap_idle => grp_getALUfunc_fu_562_ap_idle,
        ap_ready => grp_getALUfunc_fu_562_ap_ready,
        instr => reg_519,
        ap_return => grp_getALUfunc_fu_562_ap_return);

    grp_getRs1Addr_fu_582 : component getRs1Addr
    port map (
        ap_ready => grp_getRs1Addr_fu_582_ap_ready,
        encodedInstr_V => fromMemoryPort_sig_loadedData_V,
        ap_return => grp_getRs1Addr_fu_582_ap_return);

    grp_readRegfile_fu_650 : component readRegfile
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_readRegfile_fu_650_ap_start,
        ap_done => grp_readRegfile_fu_650_ap_done,
        ap_idle => grp_readRegfile_fu_650_ap_idle,
        ap_ready => grp_readRegfile_fu_650_ap_ready,
        regfile_reg_file_01_V => fromRegsPort_sig_reg_file_01_V,
        regfile_reg_file_02_V => fromRegsPort_sig_reg_file_02_V,
        regfile_reg_file_03_V => fromRegsPort_sig_reg_file_03_V,
        regfile_reg_file_04_V => fromRegsPort_sig_reg_file_04_V,
        regfile_reg_file_05_V => fromRegsPort_sig_reg_file_05_V,
        regfile_reg_file_06_V => fromRegsPort_sig_reg_file_06_V,
        regfile_reg_file_07_V => fromRegsPort_sig_reg_file_07_V,
        regfile_reg_file_08_V => fromRegsPort_sig_reg_file_08_V,
        regfile_reg_file_09_V => fromRegsPort_sig_reg_file_09_V,
        regfile_reg_file_10_V => fromRegsPort_sig_reg_file_10_V,
        regfile_reg_file_11_V => fromRegsPort_sig_reg_file_11_V,
        regfile_reg_file_12_V => fromRegsPort_sig_reg_file_12_V,
        regfile_reg_file_13_V => fromRegsPort_sig_reg_file_13_V,
        regfile_reg_file_14_V => fromRegsPort_sig_reg_file_14_V,
        regfile_reg_file_15_V => fromRegsPort_sig_reg_file_15_V,
        regfile_reg_file_16_V => fromRegsPort_sig_reg_file_16_V,
        regfile_reg_file_17_V => fromRegsPort_sig_reg_file_17_V,
        regfile_reg_file_18_V => fromRegsPort_sig_reg_file_18_V,
        regfile_reg_file_19_V => fromRegsPort_sig_reg_file_19_V,
        regfile_reg_file_20_V => fromRegsPort_sig_reg_file_20_V,
        regfile_reg_file_21_V => fromRegsPort_sig_reg_file_21_V,
        regfile_reg_file_22_V => fromRegsPort_sig_reg_file_22_V,
        regfile_reg_file_23_V => fromRegsPort_sig_reg_file_23_V,
        regfile_reg_file_24_V => fromRegsPort_sig_reg_file_24_V,
        regfile_reg_file_25_V => fromRegsPort_sig_reg_file_25_V,
        regfile_reg_file_26_V => fromRegsPort_sig_reg_file_26_V,
        regfile_reg_file_27_V => fromRegsPort_sig_reg_file_27_V,
        regfile_reg_file_28_V => fromRegsPort_sig_reg_file_28_V,
        regfile_reg_file_29_V => fromRegsPort_sig_reg_file_29_V,
        regfile_reg_file_30_V => fromRegsPort_sig_reg_file_30_V,
        regfile_reg_file_31_V => fromRegsPort_sig_reg_file_31_V,
        src_V => reg_516,
        ap_return => grp_readRegfile_fu_650_ap_return);

    grp_getRs2Addr_fu_814 : component getRs2Addr
    port map (
        ap_ready => grp_getRs2Addr_fu_814_ap_ready,
        encodedInstr_V => fromMemoryPort_sig_loadedData_V,
        ap_return => grp_getRs2Addr_fu_814_ap_return);

    grp_getALUresult_fu_943 : component getALUresult
    port map (
        ap_ready => grp_getALUresult_fu_943_ap_ready,
        aluFunction => grp_getALUresult_fu_943_aluFunction,
        operand1_V => grp_getALUresult_fu_943_operand1_V,
        operand2_V => grp_getALUresult_fu_943_operand2_V,
        ap_return => grp_getALUresult_fu_943_ap_return);

    grp_getImmediate_fu_983 : component getImmediate
    port map (
        ap_ready => grp_getImmediate_fu_983_ap_ready,
        encodedInstr_V => fromMemoryPort_sig_loadedData_V,
        ap_return => grp_getImmediate_fu_983_ap_return);

    op2_V_assign_2_branchPCcalculation_fu_1011 : component branchPCcalculation
    port map (
        ap_ready => op2_V_assign_2_branchPCcalculation_fu_1011_ap_ready,
        aluResult_V => grp_getALUresult_fu_943_ap_return,
        encodedInstr_V => fromMemoryPort_sig_loadedData_V,
        pcReg_V => in_pcReg_V,
        ap_return => op2_V_assign_2_branchPCcalculation_fu_1011_ap_return);

    grp_getMemoryMask_fu_1033 : component getMemoryMask
    port map (
        ap_ready => grp_getMemoryMask_fu_1033_ap_ready,
        instr => grp_getInstrType_fu_528_ap_return,
        ap_return => grp_getMemoryMask_fu_1033_ap_return);

    op2_V_assign_7_getEncUALUresult_fu_1052 : component getEncUALUresult
    port map (
        ap_ready => op2_V_assign_7_getEncUALUresult_fu_1052_ap_ready,
        encodedInstr_V => fromMemoryPort_sig_loadedData_V,
        pcReg_V => in_pcReg_V,
        ap_return => op2_V_assign_7_getEncUALUresult_fu_1052_ap_return);





    ap_CS_fsm_assign_proc : process(ap_rst, ap_clk)
    begin
        if (ap_rst = '1') then
            ap_CS_fsm <= ap_ST_fsm_state1;
        elsif (ap_clk'event and ap_clk =  '1') then
            ap_CS_fsm <= ap_NS_fsm;
        end if;
    end process;


    grp_getALUfunc_fu_562_ap_start_reg_assign_proc : process(ap_rst, ap_clk)
    begin
        if (ap_rst = '1') then
            grp_getALUfunc_fu_562_ap_start_reg <= ap_const_logic_0;
        elsif (ap_clk'event and ap_clk =  '1') then
            if ((((ap_start = ap_const_logic_1) and (ap_const_lv4_7 = active_operation) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_3 = active_operation) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_2 = active_operation) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                grp_getALUfunc_fu_562_ap_start_reg <= ap_const_logic_1;
            elsif ((grp_getALUfunc_fu_562_ap_ready = ap_const_logic_1)) then 
                grp_getALUfunc_fu_562_ap_start_reg <= ap_const_logic_0;
            end if; 
        end if;
    end process;


    grp_readRegfile_fu_650_ap_start_reg_assign_proc : process(ap_rst, ap_clk)
    begin
        if (ap_rst = '1') then
            grp_readRegfile_fu_650_ap_start_reg <= ap_const_logic_0;
        elsif (ap_clk'event and ap_clk =  '1') then
            if ((((ap_const_lv4_3 = active_operation) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_boolean_0 = ap_block_state3_on_subcall_done)) or ((ap_const_lv4_2 = active_operation) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_boolean_0 = ap_block_state3_on_subcall_done)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_7 = active_operation) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_3 = active_operation) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_2 = active_operation) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_9 = active_operation) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_8 = active_operation) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_4 = active_operation) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_4 = active_operation) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_boolean_0 = ap_block_state3_on_subcall_done)))) then 
                grp_readRegfile_fu_650_ap_start_reg <= ap_const_logic_1;
            elsif ((grp_readRegfile_fu_650_ap_ready = ap_const_logic_1)) then 
                grp_readRegfile_fu_650_ap_start_reg <= ap_const_logic_0;
            end if; 
        end if;
    end process;


    reg_1082_assign_proc : process(ap_rst, ap_clk)
    begin
        if (ap_rst = '1') then
            reg_1082 <= ap_const_lv4_0;
        elsif (ap_clk'event and ap_clk =  '1') then
            if ((((ap_const_lv4_3 = active_operation) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_boolean_0 = ap_block_state3_on_subcall_done)) or ((ap_const_lv4_2 = active_operation) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_boolean_0 = ap_block_state3_on_subcall_done)))) then 
                reg_1082 <= grp_getALUfunc_fu_562_ap_return;
            end if; 
        end if;
    end process;


    reg_1087_assign_proc : process(ap_rst, ap_clk)
    begin
        if (ap_rst = '1') then
            reg_1087 <= ap_const_lv32_0;
        elsif (ap_clk'event and ap_clk =  '1') then
            if ((((ap_const_lv4_3 = active_operation) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_boolean_0 = ap_block_state3_on_subcall_done)) or ((ap_const_lv4_2 = active_operation) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_boolean_0 = ap_block_state3_on_subcall_done)))) then 
                reg_1087 <= grp_readRegfile_fu_650_ap_return;
            end if; 
        end if;
    end process;


    reg_516_assign_proc : process(ap_rst, ap_clk)
    begin
        if (ap_rst = '1') then
            reg_516 <= ap_const_lv5_0;
        elsif (ap_clk'event and ap_clk =  '1') then
            if ((((ap_const_lv4_3 = active_operation) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_boolean_0 = ap_block_state3_on_subcall_done)) or ((ap_const_lv4_2 = active_operation) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_boolean_0 = ap_block_state3_on_subcall_done)) or ((ap_const_lv4_4 = active_operation) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_boolean_0 = ap_block_state3_on_subcall_done)))) then 
                reg_516 <= grp_getRs2Addr_fu_814_ap_return;
            elsif ((((ap_start = ap_const_logic_1) and (ap_const_lv4_7 = active_operation) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_3 = active_operation) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_2 = active_operation) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_9 = active_operation) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_8 = active_operation) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_4 = active_operation) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                reg_516 <= grp_getRs1Addr_fu_582_ap_return;
            end if; 
        end if;
    end process;


    reg_519_assign_proc : process(ap_rst, ap_clk)
    begin
        if (ap_rst = '1') then
            reg_519 <= ap_const_lv6_0;
        elsif (ap_clk'event and ap_clk =  '1') then
            if ((((ap_start = ap_const_logic_1) and (ap_const_lv4_7 = active_operation) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_3 = active_operation) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_2 = active_operation) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                reg_519 <= grp_getInstrType_fu_528_ap_return;
            end if; 
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, active_operation, active_operation_rea_read_fu_206_p2, ap_CS_fsm_state3, ap_block_state3_on_subcall_done, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_block_state2_on_subcall_done, ap_block_state4_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and ((ap_const_lv4_F = active_operation_rea_read_fu_206_p2) or (ap_const_lv4_E = active_operation_rea_read_fu_206_p2) or (ap_const_lv4_A = active_operation_rea_read_fu_206_p2) or (ap_const_lv4_C = active_operation_rea_read_fu_206_p2) or (ap_const_lv4_1 = active_operation_rea_read_fu_206_p2) or (ap_const_lv4_B = active_operation_rea_read_fu_206_p2) or (ap_const_lv4_D = active_operation_rea_read_fu_206_p2) or (ap_const_lv4_0 = active_operation_rea_read_fu_206_p2) or (ap_const_lv4_5 = active_operation_rea_read_fu_206_p2) or (ap_const_lv4_6 = active_operation_rea_read_fu_206_p2)))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and ((ap_const_lv4_3 = active_operation) or (ap_const_lv4_2 = active_operation) or (ap_const_lv4_4 = active_operation)))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and ((ap_const_lv4_7 = active_operation) or (ap_const_lv4_9 = active_operation) or (ap_const_lv4_8 = active_operation)))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and ((ap_const_lv4_7 = active_operation) or (ap_const_lv4_9 = active_operation) or (ap_const_lv4_8 = active_operation)))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_boolean_0 = ap_block_state3_on_subcall_done) and ((ap_const_lv4_3 = active_operation) or (ap_const_lv4_2 = active_operation) or (ap_const_lv4_4 = active_operation)))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    active_operation_rea_read_fu_206_p2 <= active_operation;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);

    ap_block_state2_on_subcall_done_assign_proc : process(active_operation, grp_readRegfile_fu_650_ap_done, grp_getALUfunc_fu_562_ap_done)
    begin
                ap_block_state2_on_subcall_done <= (((ap_const_lv4_7 = active_operation) and (grp_getALUfunc_fu_562_ap_done = ap_const_logic_0)) or ((ap_const_lv4_7 = active_operation) and (grp_readRegfile_fu_650_ap_done = ap_const_logic_0)) or ((ap_const_lv4_9 = active_operation) and (grp_readRegfile_fu_650_ap_done = ap_const_logic_0)) or ((ap_const_lv4_8 = active_operation) and (grp_readRegfile_fu_650_ap_done = ap_const_logic_0)));
    end process;


    ap_block_state3_on_subcall_done_assign_proc : process(active_operation, grp_readRegfile_fu_650_ap_done, grp_getALUfunc_fu_562_ap_done)
    begin
                ap_block_state3_on_subcall_done <= (((ap_const_lv4_3 = active_operation) and (grp_getALUfunc_fu_562_ap_done = ap_const_logic_0)) or ((ap_const_lv4_3 = active_operation) and (grp_readRegfile_fu_650_ap_done = ap_const_logic_0)) or ((ap_const_lv4_2 = active_operation) and (grp_getALUfunc_fu_562_ap_done = ap_const_logic_0)) or ((ap_const_lv4_2 = active_operation) and (grp_readRegfile_fu_650_ap_done = ap_const_logic_0)) or ((ap_const_lv4_4 = active_operation) and (grp_readRegfile_fu_650_ap_done = ap_const_logic_0)));
    end process;


    ap_block_state4_on_subcall_done_assign_proc : process(active_operation, grp_readRegfile_fu_650_ap_done)
    begin
                ap_block_state4_on_subcall_done <= (((ap_const_lv4_3 = active_operation) and (grp_readRegfile_fu_650_ap_done = ap_const_logic_0)) or ((ap_const_lv4_2 = active_operation) and (grp_readRegfile_fu_650_ap_done = ap_const_logic_0)) or ((ap_const_lv4_4 = active_operation) and (grp_readRegfile_fu_650_ap_done = ap_const_logic_0)));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state4, ap_block_state4_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state4, ap_block_state4_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    fromMemoryPort_notify_assign_proc : process(ap_start, ap_CS_fsm_state1, active_operation, active_operation_rea_read_fu_206_p2, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_block_state2_on_subcall_done, ap_block_state4_on_subcall_done)
    begin
        if ((((ap_start = ap_const_logic_1) and (ap_const_lv4_0 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_A = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_C = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            fromMemoryPort_notify <= ap_const_logic_1;
        elsif ((((ap_const_lv4_7 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_lv4_3 = active_operation) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_const_lv4_2 = active_operation) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_1 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_B = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_D = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_5 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_6 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_9 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_lv4_8 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_lv4_4 = active_operation) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            fromMemoryPort_notify <= ap_const_logic_0;
        else 
            fromMemoryPort_notify <= 'X';
        end if; 
    end process;


    fromMemoryPort_notify_ap_vld_assign_proc : process(ap_start, ap_CS_fsm_state1, active_operation, active_operation_rea_read_fu_206_p2, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_block_state2_on_subcall_done, ap_block_state4_on_subcall_done)
    begin
        if ((((ap_const_lv4_7 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_lv4_3 = active_operation) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_const_lv4_2 = active_operation) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_0 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_A = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_C = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_1 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_B = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_D = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_5 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_6 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_9 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_lv4_8 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_lv4_4 = active_operation) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            fromMemoryPort_notify_ap_vld <= ap_const_logic_1;
        else 
            fromMemoryPort_notify_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1073_p0_assign_proc : process(ap_CS_fsm_state1, grp_readRegfile_fu_650_ap_return, grp_getImmediate_fu_983_ap_return, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_1073_p0 <= grp_readRegfile_fu_650_ap_return;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_fu_1073_p0 <= grp_getImmediate_fu_983_ap_return;
        else 
            grp_fu_1073_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1073_p1_assign_proc : process(ap_CS_fsm_state1, in_pcReg_V, grp_getImmediate_fu_983_ap_return, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_1073_p1 <= grp_getImmediate_fu_983_ap_return;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_fu_1073_p1 <= in_pcReg_V;
        else 
            grp_fu_1073_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_1073_p2 <= std_logic_vector(unsigned(grp_fu_1073_p0) + unsigned(grp_fu_1073_p1));
    grp_fu_1110_p2 <= std_logic_vector(unsigned(in_pcReg_V) + unsigned(ap_const_lv32_4));
    grp_getALUfunc_fu_562_ap_start <= grp_getALUfunc_fu_562_ap_start_reg;

    grp_getALUresult_fu_943_aluFunction_assign_proc : process(active_operation, ap_CS_fsm_state3, grp_getALUfunc_fu_562_ap_return, reg_1082, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((((ap_const_lv4_3 = active_operation) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_const_lv4_2 = active_operation) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            grp_getALUresult_fu_943_aluFunction <= reg_1082;
        elsif (((ap_const_lv4_7 = active_operation) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            grp_getALUresult_fu_943_aluFunction <= grp_getALUfunc_fu_562_ap_return;
        elsif ((((ap_const_lv4_8 = active_operation) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_lv4_4 = active_operation) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            grp_getALUresult_fu_943_aluFunction <= ap_const_lv4_0;
        else 
            grp_getALUresult_fu_943_aluFunction <= "XXXX";
        end if; 
    end process;


    grp_getALUresult_fu_943_operand1_V_assign_proc : process(active_operation, ap_CS_fsm_state3, grp_readRegfile_fu_650_ap_return, reg_1087, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((((ap_const_lv4_3 = active_operation) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_const_lv4_2 = active_operation) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            grp_getALUresult_fu_943_operand1_V <= reg_1087;
        elsif ((((ap_const_lv4_7 = active_operation) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_lv4_8 = active_operation) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_lv4_4 = active_operation) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            grp_getALUresult_fu_943_operand1_V <= grp_readRegfile_fu_650_ap_return;
        else 
            grp_getALUresult_fu_943_operand1_V <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_getALUresult_fu_943_operand2_V_assign_proc : process(active_operation, ap_CS_fsm_state3, grp_readRegfile_fu_650_ap_return, grp_getImmediate_fu_983_ap_return, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((((ap_const_lv4_3 = active_operation) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_const_lv4_2 = active_operation) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            grp_getALUresult_fu_943_operand2_V <= grp_readRegfile_fu_650_ap_return;
        elsif ((((ap_const_lv4_7 = active_operation) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_lv4_8 = active_operation) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_lv4_4 = active_operation) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            grp_getALUresult_fu_943_operand2_V <= grp_getImmediate_fu_983_ap_return;
        else 
            grp_getALUresult_fu_943_operand2_V <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_readRegfile_fu_650_ap_start <= grp_readRegfile_fu_650_ap_start_reg;

    out_pcReg_V_assign_proc : process(ap_start, ap_CS_fsm_state1, active_operation, active_operation_rea_read_fu_206_p2, op2_V_assign_2_branchPCcalculation_fu_1011_ap_return, ap_CS_fsm_state2, ap_CS_fsm_state4, grp_fu_1110_p2, grp_fu_1073_p2, ap_block_state2_on_subcall_done, ap_block_state4_on_subcall_done)
    begin
        if (((ap_const_lv4_3 = active_operation) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            out_pcReg_V <= op2_V_assign_2_branchPCcalculation_fu_1011_ap_return;
        elsif ((((ap_start = ap_const_logic_1) and (ap_const_lv4_6 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_9 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            out_pcReg_V <= grp_fu_1073_p2;
        elsif ((((ap_const_lv4_7 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_lv4_2 = active_operation) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_B = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_D = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_5 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            out_pcReg_V <= grp_fu_1110_p2;
        else 
            out_pcReg_V <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    out_pcReg_V_ap_vld_assign_proc : process(ap_start, ap_CS_fsm_state1, active_operation, active_operation_rea_read_fu_206_p2, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_block_state2_on_subcall_done, ap_block_state4_on_subcall_done)
    begin
        if ((((ap_const_lv4_7 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_lv4_3 = active_operation) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_const_lv4_2 = active_operation) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_B = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_D = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_5 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_6 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_9 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            out_pcReg_V_ap_vld <= ap_const_logic_1;
        else 
            out_pcReg_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    out_regfileWrite_dstData_V_assign_proc : process(ap_start, ap_CS_fsm_state1, fromMemoryPort_sig_loadedData_V, active_operation, active_operation_rea_read_fu_206_p2, grp_getALUresult_fu_943_ap_return, op2_V_assign_7_getEncUALUresult_fu_1052_ap_return, ap_CS_fsm_state2, ap_CS_fsm_state4, grp_fu_1110_p2, ap_block_state2_on_subcall_done, ap_block_state4_on_subcall_done)
    begin
        if ((((ap_const_lv4_7 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_lv4_2 = active_operation) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            out_regfileWrite_dstData_V <= grp_getALUresult_fu_943_ap_return;
        elsif (((ap_start = ap_const_logic_1) and (ap_const_lv4_5 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            out_regfileWrite_dstData_V <= op2_V_assign_7_getEncUALUresult_fu_1052_ap_return;
        elsif ((((ap_start = ap_const_logic_1) and (ap_const_lv4_6 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_9 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            out_regfileWrite_dstData_V <= grp_fu_1110_p2;
        elsif (((ap_start = ap_const_logic_1) and (ap_const_lv4_D = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            out_regfileWrite_dstData_V <= fromMemoryPort_sig_loadedData_V;
        else 
            out_regfileWrite_dstData_V <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    out_regfileWrite_dstData_V_ap_vld_assign_proc : process(ap_start, ap_CS_fsm_state1, active_operation, active_operation_rea_read_fu_206_p2, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_block_state2_on_subcall_done, ap_block_state4_on_subcall_done)
    begin
        if ((((ap_const_lv4_7 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_lv4_2 = active_operation) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_D = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_5 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_6 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_9 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            out_regfileWrite_dstData_V_ap_vld <= ap_const_logic_1;
        else 
            out_regfileWrite_dstData_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    out_regfileWrite_dst_V_assign_proc : process(ap_start, ap_CS_fsm_state1, in_regfileWrite_dst_V, active_operation, active_operation_rea_read_fu_206_p2, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_block_state2_on_subcall_done, ap_block_state4_on_subcall_done, p_trunc2_ext_fu_1100_p1, p_trunc1_ext_fu_1105_p1, p_trunc5_ext_fu_1118_p1, p_trunc4_ext_fu_1123_p1, p_trunc3_ext_fu_1128_p1, p_trunc_ext_fu_1133_p1)
    begin
        if (((ap_const_lv4_2 = active_operation) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            out_regfileWrite_dst_V <= p_trunc_ext_fu_1133_p1;
        elsif (((ap_const_lv4_7 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            out_regfileWrite_dst_V <= p_trunc3_ext_fu_1128_p1;
        elsif (((ap_const_lv4_8 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            out_regfileWrite_dst_V <= p_trunc4_ext_fu_1123_p1;
        elsif (((ap_const_lv4_9 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            out_regfileWrite_dst_V <= p_trunc5_ext_fu_1118_p1;
        elsif (((ap_start = ap_const_logic_1) and (ap_const_lv4_5 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            out_regfileWrite_dst_V <= p_trunc1_ext_fu_1105_p1;
        elsif (((ap_start = ap_const_logic_1) and (ap_const_lv4_6 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            out_regfileWrite_dst_V <= p_trunc2_ext_fu_1100_p1;
        elsif (((ap_start = ap_const_logic_1) and (ap_const_lv4_D = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            out_regfileWrite_dst_V <= in_regfileWrite_dst_V;
        else 
            out_regfileWrite_dst_V <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    out_regfileWrite_dst_V_ap_vld_assign_proc : process(ap_start, ap_CS_fsm_state1, active_operation, active_operation_rea_read_fu_206_p2, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_block_state2_on_subcall_done, ap_block_state4_on_subcall_done)
    begin
        if ((((ap_const_lv4_7 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_lv4_2 = active_operation) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_D = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_5 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_6 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_9 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_lv4_8 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            out_regfileWrite_dst_V_ap_vld <= ap_const_logic_1;
        else 
            out_regfileWrite_dst_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_trunc1_ext_fu_1105_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_getRdAddr_fu_499_ap_return),32));
    p_trunc2_ext_fu_1100_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_getRdAddr_fu_499_ap_return),32));
    p_trunc3_ext_fu_1128_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_getRdAddr_fu_499_ap_return),32));
    p_trunc4_ext_fu_1123_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_getRdAddr_fu_499_ap_return),32));
    p_trunc5_ext_fu_1118_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_getRdAddr_fu_499_ap_return),32));
    p_trunc_ext_fu_1133_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_getRdAddr_fu_499_ap_return),32));

    toMemoryPort_notify_assign_proc : process(ap_start, ap_CS_fsm_state1, active_operation, active_operation_rea_read_fu_206_p2, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_block_state2_on_subcall_done, ap_block_state4_on_subcall_done)
    begin
        if ((((ap_start = ap_const_logic_1) and (ap_const_lv4_0 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_A = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_C = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            toMemoryPort_notify <= ap_const_logic_0;
        elsif ((((ap_const_lv4_7 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_lv4_3 = active_operation) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_const_lv4_2 = active_operation) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_1 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_B = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_D = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_5 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_6 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_9 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_lv4_8 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_lv4_4 = active_operation) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            toMemoryPort_notify <= ap_const_logic_1;
        else 
            toMemoryPort_notify <= 'X';
        end if; 
    end process;


    toMemoryPort_notify_ap_vld_assign_proc : process(ap_start, ap_CS_fsm_state1, active_operation, active_operation_rea_read_fu_206_p2, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_block_state2_on_subcall_done, ap_block_state4_on_subcall_done)
    begin
        if ((((ap_const_lv4_7 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_lv4_3 = active_operation) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_const_lv4_2 = active_operation) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_0 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_A = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_C = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_1 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_B = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_D = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_5 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_6 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_9 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_lv4_8 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_lv4_4 = active_operation) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            toMemoryPort_notify_ap_vld <= ap_const_logic_1;
        else 
            toMemoryPort_notify_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    toMemoryPort_sig_addrIn_V_assign_proc : process(ap_start, ap_CS_fsm_state1, in_pcReg_V, active_operation, active_operation_rea_read_fu_206_p2, ap_CS_fsm_state3, ap_block_state3_on_subcall_done, grp_getALUresult_fu_943_ap_return, op2_V_assign_2_branchPCcalculation_fu_1011_ap_return, ap_CS_fsm_state2, ap_CS_fsm_state4, grp_fu_1110_p2, grp_fu_1073_p2, ap_block_state2_on_subcall_done, ap_block_state4_on_subcall_done)
    begin
        if (((ap_const_lv4_3 = active_operation) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            toMemoryPort_sig_addrIn_V <= op2_V_assign_2_branchPCcalculation_fu_1011_ap_return;
        elsif ((((ap_const_lv4_8 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_lv4_4 = active_operation) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_boolean_0 = ap_block_state3_on_subcall_done)))) then 
            toMemoryPort_sig_addrIn_V <= grp_getALUresult_fu_943_ap_return;
        elsif (((ap_start = ap_const_logic_1) and (ap_const_lv4_1 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            toMemoryPort_sig_addrIn_V <= in_pcReg_V;
        elsif ((((ap_start = ap_const_logic_1) and (ap_const_lv4_6 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_9 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            toMemoryPort_sig_addrIn_V <= grp_fu_1073_p2;
        elsif ((((ap_const_lv4_7 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_lv4_2 = active_operation) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_B = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_D = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_5 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            toMemoryPort_sig_addrIn_V <= grp_fu_1110_p2;
        else 
            toMemoryPort_sig_addrIn_V <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    toMemoryPort_sig_addrIn_V_ap_vld_assign_proc : process(ap_start, ap_CS_fsm_state1, active_operation, active_operation_rea_read_fu_206_p2, ap_CS_fsm_state3, ap_block_state3_on_subcall_done, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_block_state2_on_subcall_done, ap_block_state4_on_subcall_done)
    begin
        if ((((ap_const_lv4_7 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_lv4_3 = active_operation) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_const_lv4_2 = active_operation) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_1 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_B = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_D = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_5 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_6 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_9 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_lv4_8 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_lv4_4 = active_operation) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_boolean_0 = ap_block_state3_on_subcall_done)))) then 
            toMemoryPort_sig_addrIn_V_ap_vld <= ap_const_logic_1;
        else 
            toMemoryPort_sig_addrIn_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    toMemoryPort_sig_dataIn_V_assign_proc : process(ap_start, ap_CS_fsm_state1, active_operation, active_operation_rea_read_fu_206_p2, grp_readRegfile_fu_650_ap_return, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_block_state2_on_subcall_done, ap_block_state4_on_subcall_done)
    begin
        if (((ap_const_lv4_4 = active_operation) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            toMemoryPort_sig_dataIn_V <= grp_readRegfile_fu_650_ap_return;
        elsif ((((ap_const_lv4_7 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_lv4_3 = active_operation) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_const_lv4_2 = active_operation) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_1 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_B = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_D = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_5 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_6 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_9 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_lv4_8 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            toMemoryPort_sig_dataIn_V <= ap_const_lv32_0;
        else 
            toMemoryPort_sig_dataIn_V <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    toMemoryPort_sig_dataIn_V_ap_vld_assign_proc : process(ap_start, ap_CS_fsm_state1, active_operation, active_operation_rea_read_fu_206_p2, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_block_state2_on_subcall_done, ap_block_state4_on_subcall_done)
    begin
        if ((((ap_const_lv4_7 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_lv4_3 = active_operation) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_const_lv4_2 = active_operation) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_1 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_B = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_D = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_5 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_6 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_9 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_lv4_8 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_lv4_4 = active_operation) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            toMemoryPort_sig_dataIn_V_ap_vld <= ap_const_logic_1;
        else 
            toMemoryPort_sig_dataIn_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    toMemoryPort_sig_mask_assign_proc : process(ap_start, ap_CS_fsm_state1, active_operation, active_operation_rea_read_fu_206_p2, grp_getMemoryMask_fu_1033_ap_return, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_block_state2_on_subcall_done, ap_block_state4_on_subcall_done)
    begin
        if ((((ap_const_lv4_8 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_lv4_4 = active_operation) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            toMemoryPort_sig_mask <= grp_getMemoryMask_fu_1033_ap_return;
        elsif ((((ap_const_lv4_7 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_lv4_3 = active_operation) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_const_lv4_2 = active_operation) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_1 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_B = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_D = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_5 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_6 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_9 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            toMemoryPort_sig_mask <= ap_const_lv3_4;
        else 
            toMemoryPort_sig_mask <= "XXX";
        end if; 
    end process;


    toMemoryPort_sig_mask_ap_vld_assign_proc : process(ap_start, ap_CS_fsm_state1, active_operation, active_operation_rea_read_fu_206_p2, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_block_state2_on_subcall_done, ap_block_state4_on_subcall_done)
    begin
        if ((((ap_const_lv4_7 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_lv4_3 = active_operation) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_const_lv4_2 = active_operation) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_1 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_B = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_D = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_5 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_6 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_9 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_lv4_8 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_lv4_4 = active_operation) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            toMemoryPort_sig_mask_ap_vld <= ap_const_logic_1;
        else 
            toMemoryPort_sig_mask_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    toMemoryPort_sig_req_assign_proc : process(ap_start, ap_CS_fsm_state1, active_operation, active_operation_rea_read_fu_206_p2, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_block_state2_on_subcall_done, ap_block_state4_on_subcall_done)
    begin
        if (((ap_const_lv4_4 = active_operation) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            toMemoryPort_sig_req <= ap_const_lv2_1;
        elsif ((((ap_const_lv4_7 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_lv4_3 = active_operation) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_const_lv4_2 = active_operation) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_1 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_B = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_D = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_5 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_6 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_9 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_lv4_8 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            toMemoryPort_sig_req <= ap_const_lv2_0;
        else 
            toMemoryPort_sig_req <= "XX";
        end if; 
    end process;


    toMemoryPort_sig_req_ap_vld_assign_proc : process(ap_start, ap_CS_fsm_state1, active_operation, active_operation_rea_read_fu_206_p2, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_block_state2_on_subcall_done, ap_block_state4_on_subcall_done)
    begin
        if ((((ap_const_lv4_7 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_lv4_3 = active_operation) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_const_lv4_2 = active_operation) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_1 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_B = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_D = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_5 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_6 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_9 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_lv4_8 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_lv4_4 = active_operation) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            toMemoryPort_sig_req_ap_vld <= ap_const_logic_1;
        else 
            toMemoryPort_sig_req_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    toRegsPort_notify_assign_proc : process(ap_start, ap_CS_fsm_state1, active_operation, active_operation_rea_read_fu_206_p2, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_block_state2_on_subcall_done, ap_block_state4_on_subcall_done)
    begin
        if ((((ap_const_lv4_3 = active_operation) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_0 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_A = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_C = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_1 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_B = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_8 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_lv4_4 = active_operation) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            toRegsPort_notify <= ap_const_logic_0;
        elsif ((((ap_const_lv4_7 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_lv4_2 = active_operation) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_D = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_5 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_6 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_9 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            toRegsPort_notify <= ap_const_logic_1;
        else 
            toRegsPort_notify <= 'X';
        end if; 
    end process;


    toRegsPort_notify_ap_vld_assign_proc : process(ap_start, ap_CS_fsm_state1, active_operation, active_operation_rea_read_fu_206_p2, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_block_state2_on_subcall_done, ap_block_state4_on_subcall_done)
    begin
        if ((((ap_const_lv4_7 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_lv4_3 = active_operation) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_const_lv4_2 = active_operation) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_0 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_A = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_C = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_1 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_B = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_D = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_5 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv4_6 = active_operation_rea_read_fu_206_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_9 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_lv4_8 = active_operation) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_lv4_4 = active_operation) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            toRegsPort_notify_ap_vld <= ap_const_logic_1;
        else 
            toRegsPort_notify_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

end behav;
