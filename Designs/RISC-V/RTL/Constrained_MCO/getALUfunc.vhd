-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity getALUfunc is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    instr : IN STD_LOGIC_VECTOR (5 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (3 downto 0) );
end;


architecture behav of getALUfunc is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv6_16 : STD_LOGIC_VECTOR (5 downto 0) := "010110";
    constant ap_const_lv6_22 : STD_LOGIC_VECTOR (5 downto 0) := "100010";
    constant ap_const_lv6_15 : STD_LOGIC_VECTOR (5 downto 0) := "010101";
    constant ap_const_lv6_12 : STD_LOGIC_VECTOR (5 downto 0) := "010010";
    constant ap_const_lv6_10 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_const_lv6_F : STD_LOGIC_VECTOR (5 downto 0) := "001111";
    constant ap_const_lv6_E : STD_LOGIC_VECTOR (5 downto 0) := "001110";
    constant ap_const_lv6_D : STD_LOGIC_VECTOR (5 downto 0) := "001101";
    constant ap_const_lv6_4 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv6_A : STD_LOGIC_VECTOR (5 downto 0) := "001010";
    constant ap_const_lv6_21 : STD_LOGIC_VECTOR (5 downto 0) := "100001";
    constant ap_const_lv6_5 : STD_LOGIC_VECTOR (5 downto 0) := "000101";
    constant ap_const_lv6_29 : STD_LOGIC_VECTOR (5 downto 0) := "101001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv6_19 : STD_LOGIC_VECTOR (5 downto 0) := "011001";
    constant ap_const_lv6_1A : STD_LOGIC_VECTOR (5 downto 0) := "011010";
    constant ap_const_lv6_8 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_const_lv6_6 : STD_LOGIC_VECTOR (5 downto 0) := "000110";
    constant ap_const_lv6_1B : STD_LOGIC_VECTOR (5 downto 0) := "011011";
    constant ap_const_lv6_1C : STD_LOGIC_VECTOR (5 downto 0) := "011100";
    constant ap_const_lv6_9 : STD_LOGIC_VECTOR (5 downto 0) := "001001";
    constant ap_const_lv6_7 : STD_LOGIC_VECTOR (5 downto 0) := "000111";
    constant ap_const_lv6_23 : STD_LOGIC_VECTOR (5 downto 0) := "100011";
    constant ap_const_lv6_2D : STD_LOGIC_VECTOR (5 downto 0) := "101101";
    constant ap_const_lv6_3E : STD_LOGIC_VECTOR (5 downto 0) := "111110";
    constant ap_const_lv6_35 : STD_LOGIC_VECTOR (5 downto 0) := "110101";
    constant ap_const_lv6_11 : STD_LOGIC_VECTOR (5 downto 0) := "010001";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal select_ln62_fu_549_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln39_9_fu_269_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln39_11_fu_299_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln44_fu_321_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln39_14_fu_363_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln39_17_fu_405_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln50_fu_427_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_fu_449_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln54_fu_471_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln56_fu_493_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_fu_515_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln60_fu_537_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal UnifiedRetVal_reg_98 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal icmp_ln39_1_fu_149_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_fu_155_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_2_fu_167_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln39_fu_161_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_3_fu_179_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln39_1_fu_173_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_4_fu_191_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln39_2_fu_185_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_5_fu_203_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln39_3_fu_197_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_6_fu_215_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln39_4_fu_209_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_7_fu_227_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln39_5_fu_221_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_8_fu_239_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln39_6_fu_233_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_9_fu_251_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln39_7_fu_245_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_10_fu_263_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln39_8_fu_257_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_12_fu_275_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_11_fu_281_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_13_fu_293_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln39_10_fu_287_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln44_fu_305_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_fu_311_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln39_15_fu_327_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_14_fu_333_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_16_fu_345_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln39_12_fu_339_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_17_fu_357_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln39_13_fu_351_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_19_fu_369_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_18_fu_375_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_20_fu_387_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln39_15_fu_381_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_21_fu_399_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln39_16_fu_393_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln50_fu_411_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_17_fu_417_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln52_fu_433_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_18_fu_439_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln54_fu_455_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_19_fu_461_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln56_fu_477_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_20_fu_483_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln58_fu_499_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_21_fu_505_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln60_fu_521_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_22_fu_527_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln62_fu_543_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_return_preg : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_condition_60 : BOOLEAN;
    signal ap_condition_67 : BOOLEAN;
    signal ap_condition_71 : BOOLEAN;
    signal ap_condition_75 : BOOLEAN;
    signal ap_condition_79 : BOOLEAN;
    signal ap_condition_83 : BOOLEAN;
    signal ap_condition_87 : BOOLEAN;
    signal ap_condition_91 : BOOLEAN;
    signal ap_condition_102 : BOOLEAN;
    signal ap_condition_106 : BOOLEAN;


begin




    UnifiedRetVal_reg_98_assign_proc : process(ap_rst, ap_clk)
    begin
        if (ap_rst = '1') then
            UnifiedRetVal_reg_98 <= ap_const_lv4_0;
        elsif (ap_clk'event and ap_clk =  '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                if ((ap_const_boolean_1 = ap_condition_106)) then 
                    UnifiedRetVal_reg_98 <= ap_const_lv4_6;
                elsif ((ap_const_boolean_1 = ap_condition_102)) then 
                    UnifiedRetVal_reg_98 <= ap_const_lv4_5;
                elsif (((or_ln39_11_fu_299_p2 = ap_const_lv1_1) and (or_ln39_9_fu_269_p2 = ap_const_lv1_0))) then 
                    UnifiedRetVal_reg_98 <= ap_const_lv4_9;
                elsif ((or_ln39_9_fu_269_p2 = ap_const_lv1_1)) then 
                    UnifiedRetVal_reg_98 <= ap_const_lv4_0;
                elsif ((ap_const_boolean_1 = ap_condition_91)) then 
                    UnifiedRetVal_reg_98 <= ap_const_lv4_A;
                elsif ((ap_const_boolean_1 = ap_condition_87)) then 
                    UnifiedRetVal_reg_98 <= ap_const_lv4_1;
                elsif ((ap_const_boolean_1 = ap_condition_83)) then 
                    UnifiedRetVal_reg_98 <= ap_const_lv4_3;
                elsif ((ap_const_boolean_1 = ap_condition_79)) then 
                    UnifiedRetVal_reg_98 <= ap_const_lv4_7;
                elsif ((ap_const_boolean_1 = ap_condition_75)) then 
                    UnifiedRetVal_reg_98 <= ap_const_lv4_8;
                elsif ((ap_const_boolean_1 = ap_condition_71)) then 
                    UnifiedRetVal_reg_98 <= ap_const_lv4_B;
                elsif ((ap_const_boolean_1 = ap_condition_67)) then 
                    UnifiedRetVal_reg_98 <= ap_const_lv4_4;
                elsif ((ap_const_boolean_1 = ap_condition_60)) then 
                    UnifiedRetVal_reg_98 <= select_ln62_fu_549_p3;
                end if;
            end if; 
        end if;
    end process;


    ap_CS_fsm_assign_proc : process(ap_rst, ap_clk)
    begin
        if (ap_rst = '1') then
            ap_CS_fsm <= ap_ST_fsm_state1;
        elsif (ap_clk'event and ap_clk =  '1') then
            ap_CS_fsm <= ap_NS_fsm;
        end if;
    end process;


    ap_return_preg_assign_proc : process(ap_rst, ap_clk)
    begin
        if (ap_rst = '1') then
            ap_return_preg <= ap_const_lv4_0;
        elsif (ap_clk'event and ap_clk =  '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                ap_return_preg <= UnifiedRetVal_reg_98;
            end if; 
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    add_ln44_fu_305_p2 <= std_logic_vector(unsigned(instr) + unsigned(ap_const_lv6_29));
    add_ln50_fu_411_p2 <= std_logic_vector(unsigned(instr) + unsigned(ap_const_lv6_1C));
    add_ln52_fu_433_p2 <= std_logic_vector(unsigned(instr) + unsigned(ap_const_lv6_21));
    add_ln54_fu_455_p2 <= std_logic_vector(unsigned(instr) + unsigned(ap_const_lv6_23));
    add_ln56_fu_477_p2 <= std_logic_vector(unsigned(instr) + unsigned(ap_const_lv6_2D));
    add_ln58_fu_499_p2 <= std_logic_vector(unsigned(instr) + unsigned(ap_const_lv6_3E));
    add_ln60_fu_521_p2 <= std_logic_vector(unsigned(instr) + unsigned(ap_const_lv6_35));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);

    ap_condition_102_assign_proc : process(or_ln39_9_fu_269_p2, or_ln39_11_fu_299_p2, icmp_ln44_fu_321_p2, or_ln39_14_fu_363_p2)
    begin
                ap_condition_102 <= ((or_ln39_14_fu_363_p2 = ap_const_lv1_1) and (icmp_ln44_fu_321_p2 = ap_const_lv1_0) and (or_ln39_11_fu_299_p2 = ap_const_lv1_0) and (or_ln39_9_fu_269_p2 = ap_const_lv1_0));
    end process;


    ap_condition_106_assign_proc : process(or_ln39_9_fu_269_p2, or_ln39_11_fu_299_p2, icmp_ln44_fu_321_p2, or_ln39_14_fu_363_p2, or_ln39_17_fu_405_p2)
    begin
                ap_condition_106 <= ((or_ln39_17_fu_405_p2 = ap_const_lv1_1) and (or_ln39_14_fu_363_p2 = ap_const_lv1_0) and (icmp_ln44_fu_321_p2 = ap_const_lv1_0) and (or_ln39_11_fu_299_p2 = ap_const_lv1_0) and (or_ln39_9_fu_269_p2 = ap_const_lv1_0));
    end process;


    ap_condition_60_assign_proc : process(or_ln39_9_fu_269_p2, or_ln39_11_fu_299_p2, icmp_ln44_fu_321_p2, or_ln39_14_fu_363_p2, or_ln39_17_fu_405_p2, icmp_ln50_fu_427_p2, icmp_ln52_fu_449_p2, icmp_ln54_fu_471_p2, icmp_ln56_fu_493_p2, icmp_ln58_fu_515_p2, icmp_ln60_fu_537_p2)
    begin
                ap_condition_60 <= ((icmp_ln60_fu_537_p2 = ap_const_lv1_0) and (icmp_ln58_fu_515_p2 = ap_const_lv1_0) and (icmp_ln56_fu_493_p2 = ap_const_lv1_0) and (icmp_ln54_fu_471_p2 = ap_const_lv1_0) and (icmp_ln52_fu_449_p2 = ap_const_lv1_0) and (icmp_ln50_fu_427_p2 = ap_const_lv1_0) and (or_ln39_17_fu_405_p2 = ap_const_lv1_0) and (or_ln39_14_fu_363_p2 = ap_const_lv1_0) and (icmp_ln44_fu_321_p2 = ap_const_lv1_0) and (or_ln39_11_fu_299_p2 = ap_const_lv1_0) and (or_ln39_9_fu_269_p2 = ap_const_lv1_0));
    end process;


    ap_condition_67_assign_proc : process(or_ln39_9_fu_269_p2, or_ln39_11_fu_299_p2, icmp_ln44_fu_321_p2)
    begin
                ap_condition_67 <= ((icmp_ln44_fu_321_p2 = ap_const_lv1_1) and (or_ln39_11_fu_299_p2 = ap_const_lv1_0) and (or_ln39_9_fu_269_p2 = ap_const_lv1_0));
    end process;


    ap_condition_71_assign_proc : process(or_ln39_9_fu_269_p2, or_ln39_11_fu_299_p2, icmp_ln44_fu_321_p2, or_ln39_14_fu_363_p2, or_ln39_17_fu_405_p2, icmp_ln50_fu_427_p2)
    begin
                ap_condition_71 <= ((icmp_ln50_fu_427_p2 = ap_const_lv1_1) and (or_ln39_17_fu_405_p2 = ap_const_lv1_0) and (or_ln39_14_fu_363_p2 = ap_const_lv1_0) and (icmp_ln44_fu_321_p2 = ap_const_lv1_0) and (or_ln39_11_fu_299_p2 = ap_const_lv1_0) and (or_ln39_9_fu_269_p2 = ap_const_lv1_0));
    end process;


    ap_condition_75_assign_proc : process(or_ln39_9_fu_269_p2, or_ln39_11_fu_299_p2, icmp_ln44_fu_321_p2, or_ln39_14_fu_363_p2, or_ln39_17_fu_405_p2, icmp_ln50_fu_427_p2, icmp_ln52_fu_449_p2)
    begin
                ap_condition_75 <= ((icmp_ln52_fu_449_p2 = ap_const_lv1_1) and (icmp_ln50_fu_427_p2 = ap_const_lv1_0) and (or_ln39_17_fu_405_p2 = ap_const_lv1_0) and (or_ln39_14_fu_363_p2 = ap_const_lv1_0) and (icmp_ln44_fu_321_p2 = ap_const_lv1_0) and (or_ln39_11_fu_299_p2 = ap_const_lv1_0) and (or_ln39_9_fu_269_p2 = ap_const_lv1_0));
    end process;


    ap_condition_79_assign_proc : process(or_ln39_9_fu_269_p2, or_ln39_11_fu_299_p2, icmp_ln44_fu_321_p2, or_ln39_14_fu_363_p2, or_ln39_17_fu_405_p2, icmp_ln50_fu_427_p2, icmp_ln52_fu_449_p2, icmp_ln54_fu_471_p2)
    begin
                ap_condition_79 <= ((icmp_ln54_fu_471_p2 = ap_const_lv1_1) and (icmp_ln52_fu_449_p2 = ap_const_lv1_0) and (icmp_ln50_fu_427_p2 = ap_const_lv1_0) and (or_ln39_17_fu_405_p2 = ap_const_lv1_0) and (or_ln39_14_fu_363_p2 = ap_const_lv1_0) and (icmp_ln44_fu_321_p2 = ap_const_lv1_0) and (or_ln39_11_fu_299_p2 = ap_const_lv1_0) and (or_ln39_9_fu_269_p2 = ap_const_lv1_0));
    end process;


    ap_condition_83_assign_proc : process(or_ln39_9_fu_269_p2, or_ln39_11_fu_299_p2, icmp_ln44_fu_321_p2, or_ln39_14_fu_363_p2, or_ln39_17_fu_405_p2, icmp_ln50_fu_427_p2, icmp_ln52_fu_449_p2, icmp_ln54_fu_471_p2, icmp_ln56_fu_493_p2)
    begin
                ap_condition_83 <= ((icmp_ln56_fu_493_p2 = ap_const_lv1_1) and (icmp_ln54_fu_471_p2 = ap_const_lv1_0) and (icmp_ln52_fu_449_p2 = ap_const_lv1_0) and (icmp_ln50_fu_427_p2 = ap_const_lv1_0) and (or_ln39_17_fu_405_p2 = ap_const_lv1_0) and (or_ln39_14_fu_363_p2 = ap_const_lv1_0) and (icmp_ln44_fu_321_p2 = ap_const_lv1_0) and (or_ln39_11_fu_299_p2 = ap_const_lv1_0) and (or_ln39_9_fu_269_p2 = ap_const_lv1_0));
    end process;


    ap_condition_87_assign_proc : process(or_ln39_9_fu_269_p2, or_ln39_11_fu_299_p2, icmp_ln44_fu_321_p2, or_ln39_14_fu_363_p2, or_ln39_17_fu_405_p2, icmp_ln50_fu_427_p2, icmp_ln52_fu_449_p2, icmp_ln54_fu_471_p2, icmp_ln56_fu_493_p2, icmp_ln58_fu_515_p2)
    begin
                ap_condition_87 <= ((icmp_ln58_fu_515_p2 = ap_const_lv1_1) and (icmp_ln56_fu_493_p2 = ap_const_lv1_0) and (icmp_ln54_fu_471_p2 = ap_const_lv1_0) and (icmp_ln52_fu_449_p2 = ap_const_lv1_0) and (icmp_ln50_fu_427_p2 = ap_const_lv1_0) and (or_ln39_17_fu_405_p2 = ap_const_lv1_0) and (or_ln39_14_fu_363_p2 = ap_const_lv1_0) and (icmp_ln44_fu_321_p2 = ap_const_lv1_0) and (or_ln39_11_fu_299_p2 = ap_const_lv1_0) and (or_ln39_9_fu_269_p2 = ap_const_lv1_0));
    end process;


    ap_condition_91_assign_proc : process(or_ln39_9_fu_269_p2, or_ln39_11_fu_299_p2, icmp_ln44_fu_321_p2, or_ln39_14_fu_363_p2, or_ln39_17_fu_405_p2, icmp_ln50_fu_427_p2, icmp_ln52_fu_449_p2, icmp_ln54_fu_471_p2, icmp_ln56_fu_493_p2, icmp_ln58_fu_515_p2, icmp_ln60_fu_537_p2)
    begin
                ap_condition_91 <= ((icmp_ln60_fu_537_p2 = ap_const_lv1_1) and (icmp_ln58_fu_515_p2 = ap_const_lv1_0) and (icmp_ln56_fu_493_p2 = ap_const_lv1_0) and (icmp_ln54_fu_471_p2 = ap_const_lv1_0) and (icmp_ln52_fu_449_p2 = ap_const_lv1_0) and (icmp_ln50_fu_427_p2 = ap_const_lv1_0) and (or_ln39_17_fu_405_p2 = ap_const_lv1_0) and (or_ln39_14_fu_363_p2 = ap_const_lv1_0) and (icmp_ln44_fu_321_p2 = ap_const_lv1_0) and (or_ln39_11_fu_299_p2 = ap_const_lv1_0) and (or_ln39_9_fu_269_p2 = ap_const_lv1_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_assign_proc : process(UnifiedRetVal_reg_98, ap_return_preg, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            ap_return <= UnifiedRetVal_reg_98;
        else 
            ap_return <= ap_return_preg;
        end if; 
    end process;

    icmp_ln39_10_fu_263_p2 <= "1" when (instr = ap_const_lv6_0) else "0";
    icmp_ln39_11_fu_281_p2 <= "1" when (instr = ap_const_lv6_21) else "0";
    icmp_ln39_12_fu_275_p2 <= "1" when (instr = ap_const_lv6_A) else "0";
    icmp_ln39_13_fu_293_p2 <= "1" when (instr = ap_const_lv6_5) else "0";
    icmp_ln39_14_fu_333_p2 <= "1" when (instr = ap_const_lv6_1A) else "0";
    icmp_ln39_15_fu_327_p2 <= "1" when (instr = ap_const_lv6_19) else "0";
    icmp_ln39_16_fu_345_p2 <= "1" when (instr = ap_const_lv6_8) else "0";
    icmp_ln39_17_fu_357_p2 <= "1" when (instr = ap_const_lv6_6) else "0";
    icmp_ln39_18_fu_375_p2 <= "1" when (instr = ap_const_lv6_1C) else "0";
    icmp_ln39_19_fu_369_p2 <= "1" when (instr = ap_const_lv6_1B) else "0";
    icmp_ln39_1_fu_149_p2 <= "1" when (instr = ap_const_lv6_16) else "0";
    icmp_ln39_20_fu_387_p2 <= "1" when (instr = ap_const_lv6_9) else "0";
    icmp_ln39_21_fu_399_p2 <= "1" when (instr = ap_const_lv6_7) else "0";
    icmp_ln39_2_fu_167_p2 <= "1" when (instr = ap_const_lv6_15) else "0";
    icmp_ln39_3_fu_179_p2 <= "1" when (instr = ap_const_lv6_12) else "0";
    icmp_ln39_4_fu_191_p2 <= "1" when (instr = ap_const_lv6_10) else "0";
    icmp_ln39_5_fu_203_p2 <= "1" when (instr = ap_const_lv6_F) else "0";
    icmp_ln39_6_fu_215_p2 <= "1" when (instr = ap_const_lv6_E) else "0";
    icmp_ln39_7_fu_227_p2 <= "1" when (instr = ap_const_lv6_D) else "0";
    icmp_ln39_8_fu_239_p2 <= "1" when (instr = ap_const_lv6_4) else "0";
    icmp_ln39_9_fu_251_p2 <= "1" when (instr = ap_const_lv6_1) else "0";
    icmp_ln39_fu_155_p2 <= "1" when (instr = ap_const_lv6_22) else "0";
    icmp_ln44_fu_321_p2 <= "1" when (tmp_fu_311_p4 = ap_const_lv5_0) else "0";
    icmp_ln50_fu_427_p2 <= "1" when (tmp_17_fu_417_p4 = ap_const_lv5_0) else "0";
    icmp_ln52_fu_449_p2 <= "1" when (tmp_18_fu_439_p4 = ap_const_lv5_0) else "0";
    icmp_ln54_fu_471_p2 <= "1" when (tmp_19_fu_461_p4 = ap_const_lv5_0) else "0";
    icmp_ln56_fu_493_p2 <= "1" when (tmp_20_fu_483_p4 = ap_const_lv5_0) else "0";
    icmp_ln58_fu_515_p2 <= "1" when (tmp_21_fu_505_p4 = ap_const_lv5_0) else "0";
    icmp_ln60_fu_537_p2 <= "1" when (tmp_22_fu_527_p4 = ap_const_lv5_0) else "0";
    icmp_ln62_fu_543_p2 <= "1" when (instr = ap_const_lv6_11) else "0";
    or_ln39_10_fu_287_p2 <= (icmp_ln39_12_fu_275_p2 or icmp_ln39_11_fu_281_p2);
    or_ln39_11_fu_299_p2 <= (or_ln39_10_fu_287_p2 or icmp_ln39_13_fu_293_p2);
    or_ln39_12_fu_339_p2 <= (icmp_ln39_15_fu_327_p2 or icmp_ln39_14_fu_333_p2);
    or_ln39_13_fu_351_p2 <= (or_ln39_12_fu_339_p2 or icmp_ln39_16_fu_345_p2);
    or_ln39_14_fu_363_p2 <= (or_ln39_13_fu_351_p2 or icmp_ln39_17_fu_357_p2);
    or_ln39_15_fu_381_p2 <= (icmp_ln39_19_fu_369_p2 or icmp_ln39_18_fu_375_p2);
    or_ln39_16_fu_393_p2 <= (or_ln39_15_fu_381_p2 or icmp_ln39_20_fu_387_p2);
    or_ln39_17_fu_405_p2 <= (or_ln39_16_fu_393_p2 or icmp_ln39_21_fu_399_p2);
    or_ln39_1_fu_173_p2 <= (or_ln39_fu_161_p2 or icmp_ln39_2_fu_167_p2);
    or_ln39_2_fu_185_p2 <= (or_ln39_1_fu_173_p2 or icmp_ln39_3_fu_179_p2);
    or_ln39_3_fu_197_p2 <= (or_ln39_2_fu_185_p2 or icmp_ln39_4_fu_191_p2);
    or_ln39_4_fu_209_p2 <= (or_ln39_3_fu_197_p2 or icmp_ln39_5_fu_203_p2);
    or_ln39_5_fu_221_p2 <= (or_ln39_4_fu_209_p2 or icmp_ln39_6_fu_215_p2);
    or_ln39_6_fu_233_p2 <= (or_ln39_5_fu_221_p2 or icmp_ln39_7_fu_227_p2);
    or_ln39_7_fu_245_p2 <= (or_ln39_6_fu_233_p2 or icmp_ln39_8_fu_239_p2);
    or_ln39_8_fu_257_p2 <= (or_ln39_7_fu_245_p2 or icmp_ln39_9_fu_251_p2);
    or_ln39_9_fu_269_p2 <= (or_ln39_8_fu_257_p2 or icmp_ln39_10_fu_263_p2);
    or_ln39_fu_161_p2 <= (icmp_ln39_fu_155_p2 or icmp_ln39_1_fu_149_p2);
    select_ln62_fu_549_p3 <= 
        ap_const_lv4_2 when (icmp_ln62_fu_543_p2(0) = '1') else 
        ap_const_lv4_A;
    tmp_17_fu_417_p4 <= add_ln50_fu_411_p2(5 downto 1);
    tmp_18_fu_439_p4 <= add_ln52_fu_433_p2(5 downto 1);
    tmp_19_fu_461_p4 <= add_ln54_fu_455_p2(5 downto 1);
    tmp_20_fu_483_p4 <= add_ln56_fu_477_p2(5 downto 1);
    tmp_21_fu_505_p4 <= add_ln58_fu_499_p2(5 downto 1);
    tmp_22_fu_527_p4 <= add_ln60_fu_521_p2(5 downto 1);
    tmp_fu_311_p4 <= add_ln44_fu_305_p2(5 downto 1);
end behav;
