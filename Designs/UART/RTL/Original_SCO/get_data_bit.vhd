-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity get_data_bit is
port (
    ap_ready : OUT STD_LOGIC;
    data_V : IN STD_LOGIC_VECTOR (31 downto 0);
    data_count_V : IN STD_LOGIC_VECTOR (3 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of get_data_bit is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal data_count_V_cast_fu_22_p1 : STD_LOGIC_VECTOR (31 downto 0);


begin



    ap_ready <= ap_const_logic_1;
    ap_return <= data_V(to_integer(unsigned(data_count_V_cast_fu_22_p1)) downto to_integer(unsigned(data_count_V_cast_fu_22_p1))) when (to_integer(unsigned(data_count_V_cast_fu_22_p1))>= 0 and to_integer(unsigned(data_count_V_cast_fu_22_p1))<=31) else "-";
    data_count_V_cast_fu_22_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(data_count_V),32));
end behav;
