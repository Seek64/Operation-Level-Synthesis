-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity update_data is
port (
    ap_ready : OUT STD_LOGIC;
    data_V : IN STD_LOGIC_VECTOR (31 downto 0);
    data_count_V : IN STD_LOGIC_VECTOR (3 downto 0);
    rx_bit : IN STD_LOGIC;
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of update_data is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal zext_ln17_fu_42_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln17_fu_46_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln214_fu_56_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_66_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal or_ln214_fu_60_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln17_1_fu_52_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln19_fu_84_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln15_fu_96_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln_fu_76_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln214_fu_90_p2 : STD_LOGIC_VECTOR (31 downto 0);


begin



    and_ln214_fu_90_p2 <= (xor_ln19_fu_84_p2 and data_V);
    ap_ready <= ap_const_logic_1;
    ap_return <= 
        or_ln_fu_76_p3 when (select_ln15_fu_96_p0(0) = '1') else 
        and_ln214_fu_90_p2;
    or_ln214_fu_60_p2 <= (trunc_ln214_fu_56_p1 or shl_ln17_fu_46_p2);
    or_ln_fu_76_p3 <= (tmp_fu_66_p4 & or_ln214_fu_60_p2);
    select_ln15_fu_96_p0 <= (0=>rx_bit, others=>'-');
    shl_ln17_fu_46_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv8_1),to_integer(unsigned('0' & zext_ln17_fu_42_p1(8-1 downto 0)))));
    tmp_fu_66_p4 <= data_V(31 downto 8);
    trunc_ln214_fu_56_p1 <= data_V(8 - 1 downto 0);
    xor_ln19_fu_84_p2 <= (zext_ln17_1_fu_52_p1 xor ap_const_lv32_FFFFFFFF);
    zext_ln17_1_fu_52_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln17_fu_46_p2),32));
    zext_ln17_fu_42_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(data_count_V),8));
end behav;
