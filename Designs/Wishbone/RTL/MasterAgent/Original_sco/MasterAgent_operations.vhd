-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity MasterAgent_operations is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    bus_to_agent_sig_data_V : IN STD_LOGIC_VECTOR (31 downto 0);
    master_to_agent_sig_addr_V : IN STD_LOGIC_VECTOR (31 downto 0);
    master_to_agent_sig_data_V : IN STD_LOGIC_VECTOR (31 downto 0);
    master_to_agent_sig_trans_type : IN STD_LOGIC_VECTOR (0 downto 0);
    agent_to_bus_sig_addr_V : OUT STD_LOGIC_VECTOR (31 downto 0);
    agent_to_bus_sig_cyc : OUT STD_LOGIC;
    agent_to_bus_sig_data_V : OUT STD_LOGIC_VECTOR (31 downto 0);
    agent_to_bus_sig_stb : OUT STD_LOGIC;
    agent_to_bus_sig_we : OUT STD_LOGIC;
    agent_to_bus_req_addr_V : OUT STD_LOGIC_VECTOR (31 downto 0);
    agent_to_bus_req_data_V : OUT STD_LOGIC_VECTOR (31 downto 0);
    agent_to_bus_req_trans_type : OUT STD_LOGIC_VECTOR (0 downto 0);
    agent_to_bus_resp_ack : OUT STD_LOGIC_VECTOR (1 downto 0);
    agent_to_bus_resp_data_V : OUT STD_LOGIC_VECTOR (31 downto 0);
    section : OUT STD_LOGIC_VECTOR (2 downto 0);
    nextsection : OUT STD_LOGIC_VECTOR (2 downto 0);
    agent_to_master_notify : OUT STD_LOGIC;
    master_to_agent_notify : OUT STD_LOGIC;
    active_operation : IN STD_LOGIC_VECTOR (3 downto 0) );
end;


architecture behav of MasterAgent_operations is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "MasterAgent_operations,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu9p-flga2104-2-i,HLS_INPUT_CLOCK=20.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=0.637250,HLS_SYN_LAT=0,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=109,HLS_SYN_LUT=78,HLS_VERSION=2020_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal agent_to_bus_resp_re_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    signal agent_to_bus_resp_re : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal nextsection_reg : STD_LOGIC_VECTOR (2 downto 0) := "001";
    signal agent_to_bus_sig_reg_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal agent_to_bus_sig_reg_3 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal agent_to_bus_sig_reg_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal agent_to_bus_sig_reg_5 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal agent_to_bus_sig_reg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal agent_to_bus_req_reg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal section_reg : STD_LOGIC_VECTOR (2 downto 0) := "001";
    signal agent_to_master_noti : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal master_to_agent_noti : STD_LOGIC_VECTOR (0 downto 0) := "1";
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal active_operation_rea_read_fu_132_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);


begin




    agent_to_bus_req_reg_assign_proc : process(ap_rst, ap_clk)
    begin
        if (ap_rst = '1') then
            agent_to_bus_req_reg <= ap_const_lv1_0;
        elsif (ap_clk'event and ap_clk =  '1') then
            if ((((ap_const_lv4_2 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_3 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                agent_to_bus_req_reg <= master_to_agent_sig_trans_type;
            end if; 
        end if;
    end process;


    agent_to_bus_resp_re_assign_proc : process(ap_rst, ap_clk)
    begin
        if (ap_rst = '1') then
            agent_to_bus_resp_re <= ap_const_lv32_0;
        elsif (ap_clk'event and ap_clk =  '1') then
            if (((ap_const_lv4_0 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                agent_to_bus_resp_re <= agent_to_bus_resp_re;
            elsif ((((ap_const_lv4_4 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_5 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                agent_to_bus_resp_re <= bus_to_agent_sig_data_V;
            end if; 
        end if;
    end process;


    agent_to_bus_resp_re_1_assign_proc : process(ap_rst, ap_clk)
    begin
        if (ap_rst = '1') then
            agent_to_bus_resp_re_1 <= ap_const_lv2_1;
        elsif (ap_clk'event and ap_clk =  '1') then
            if (((ap_const_lv4_0 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                agent_to_bus_resp_re_1 <= agent_to_bus_resp_re_1;
            elsif ((((ap_const_lv4_4 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_6 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                agent_to_bus_resp_re_1 <= ap_const_lv2_0;
            elsif ((((ap_const_lv4_5 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_7 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                agent_to_bus_resp_re_1 <= ap_const_lv2_1;
            end if; 
        end if;
    end process;


    agent_to_bus_sig_reg_assign_proc : process(ap_rst, ap_clk)
    begin
        if (ap_rst = '1') then
            agent_to_bus_sig_reg <= ap_const_lv1_0;
        elsif (ap_clk'event and ap_clk =  '1') then
            if (((ap_const_lv4_3 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                agent_to_bus_sig_reg <= ap_const_lv1_1;
            elsif ((((ap_const_lv4_2 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_4 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_5 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_6 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_7 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                agent_to_bus_sig_reg <= ap_const_lv1_0;
            end if; 
        end if;
    end process;


    agent_to_bus_sig_reg_1_assign_proc : process(ap_rst, ap_clk)
    begin
        if (ap_rst = '1') then
            agent_to_bus_sig_reg_1 <= ap_const_lv32_0;
        elsif (ap_clk'event and ap_clk =  '1') then
            if ((((ap_const_lv4_2 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_3 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                agent_to_bus_sig_reg_1 <= master_to_agent_sig_addr_V;
            elsif ((((ap_const_lv4_4 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_5 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_6 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_7 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                agent_to_bus_sig_reg_1 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;


    agent_to_bus_sig_reg_3_assign_proc : process(ap_rst, ap_clk)
    begin
        if (ap_rst = '1') then
            agent_to_bus_sig_reg_3 <= ap_const_lv1_0;
        elsif (ap_clk'event and ap_clk =  '1') then
            if ((((ap_const_lv4_2 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_3 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                agent_to_bus_sig_reg_3 <= ap_const_lv1_1;
            elsif ((((ap_const_lv4_4 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_5 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_6 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_7 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                agent_to_bus_sig_reg_3 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;


    agent_to_bus_sig_reg_4_assign_proc : process(ap_rst, ap_clk)
    begin
        if (ap_rst = '1') then
            agent_to_bus_sig_reg_4 <= ap_const_lv32_0;
        elsif (ap_clk'event and ap_clk =  '1') then
            if (((ap_const_lv4_3 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                agent_to_bus_sig_reg_4 <= master_to_agent_sig_data_V;
            elsif ((((ap_const_lv4_2 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_4 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_5 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_6 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_7 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                agent_to_bus_sig_reg_4 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;


    agent_to_bus_sig_reg_5_assign_proc : process(ap_rst, ap_clk)
    begin
        if (ap_rst = '1') then
            agent_to_bus_sig_reg_5 <= ap_const_lv1_0;
        elsif (ap_clk'event and ap_clk =  '1') then
            if ((((ap_const_lv4_2 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_3 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                agent_to_bus_sig_reg_5 <= ap_const_lv1_1;
            elsif ((((ap_const_lv4_4 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_5 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_6 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_7 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                agent_to_bus_sig_reg_5 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;


    agent_to_master_noti_assign_proc : process(ap_rst, ap_clk)
    begin
        if (ap_rst = '1') then
            agent_to_master_noti <= ap_const_lv1_0;
        elsif (ap_clk'event and ap_clk =  '1') then
            if (((ap_const_lv4_0 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                agent_to_master_noti <= ap_const_lv1_1;
            elsif ((((ap_const_lv4_2 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_3 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_9 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_4 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_5 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_6 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_7 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_1 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_8 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                agent_to_master_noti <= ap_const_lv1_0;
            end if; 
        end if;
    end process;


    ap_CS_fsm_assign_proc : process(ap_rst, ap_clk)
    begin
        if (ap_rst = '1') then
            ap_CS_fsm <= ap_ST_fsm_state1;
        elsif (ap_clk'event and ap_clk =  '1') then
            ap_CS_fsm <= ap_NS_fsm;
        end if;
    end process;


    master_to_agent_noti_assign_proc : process(ap_rst, ap_clk)
    begin
        if (ap_rst = '1') then
            master_to_agent_noti <= ap_const_lv1_1;
        elsif (ap_clk'event and ap_clk =  '1') then
            if ((((ap_const_lv4_2 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_3 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_0 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_4 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_5 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_6 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_7 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_1 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_8 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                master_to_agent_noti <= ap_const_lv1_0;
            elsif (((ap_const_lv4_9 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                master_to_agent_noti <= ap_const_lv1_1;
            end if; 
        end if;
    end process;


    nextsection_reg_assign_proc : process(ap_rst, ap_clk)
    begin
        if (ap_rst = '1') then
            nextsection_reg(0) <= '1';
            nextsection_reg(1) <= '0';
        elsif (ap_clk'event and ap_clk =  '1') then
            if ((((ap_const_lv4_2 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_3 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                nextsection_reg(0) <= '1';
                nextsection_reg(1) <= '1';
            elsif ((((ap_const_lv4_4 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_5 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_6 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_7 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                nextsection_reg(0) <= '0';
                nextsection_reg(1) <= '0';
            elsif (((ap_const_lv4_9 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                nextsection_reg(0) <= '1';
                nextsection_reg(1) <= '0';
            end if; 
        end if;
    end process;


    section_reg_assign_proc : process(ap_rst, ap_clk)
    begin
        if (ap_rst = '1') then
            section_reg(0) <= '1';
            section_reg(1) <= '0';
        elsif (ap_clk'event and ap_clk =  '1') then
            if ((((ap_const_lv4_2 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_3 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                section_reg(0) <= '1';
                section_reg(1) <= '1';
            elsif ((((ap_const_lv4_4 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_5 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_6 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_7 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                section_reg(0) <= '0';
                section_reg(1) <= '0';
            elsif ((((ap_const_lv4_1 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv4_8 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                                section_reg(1 downto 0) <= nextsection_reg(1 downto 0);
            elsif (((ap_const_lv4_9 = active_operation_rea_read_fu_132_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                section_reg(0) <= '1';
                section_reg(1) <= '0';
            end if; 
        end if;
    end process;

    nextsection_reg(2) <= '0';
    section_reg(2) <= '0';

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    active_operation_rea_read_fu_132_p2 <= active_operation;
    agent_to_bus_req_addr_V <= ap_const_lv32_0;
    agent_to_bus_req_data_V <= ap_const_lv32_0;
    agent_to_bus_req_trans_type <= agent_to_bus_req_reg;
    agent_to_bus_resp_ack <= agent_to_bus_resp_re_1;
    agent_to_bus_resp_data_V <= agent_to_bus_resp_re;
    agent_to_bus_sig_addr_V <= agent_to_bus_sig_reg_1;
    agent_to_bus_sig_cyc <= agent_to_bus_sig_reg_3(0);
    agent_to_bus_sig_data_V <= agent_to_bus_sig_reg_4;
    agent_to_bus_sig_stb <= agent_to_bus_sig_reg_5(0);
    agent_to_bus_sig_we <= agent_to_bus_sig_reg(0);
    agent_to_master_notify <= agent_to_master_noti(0);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    master_to_agent_notify <= master_to_agent_noti(0);
    nextsection <= nextsection_reg;
    section <= section_reg;
end behav;
